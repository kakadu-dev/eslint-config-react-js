module.exports = {
    env:           {
        browser: true,
        es6:     true,
        node:    true,
        jest:    true,
    },
    extends:       [
        'react-app',
        'prettier',
        'plugin:react/recommended',
        'plugin:react-redux/recommended',
        'airbnb',
    ],
    globals:       {
        Atomics:           'readonly',
        SharedArrayBuffer: 'readonly',
    },
    parserOptions: {
        ecmaFeatures: {
            jsx: true,
        },
        ecmaVersion:  2018,
        sourceType:   'module',
    },
    plugins:       [
        'react',
        'prettier',
        'react-redux',
        'react-hooks',
    ],
    rules:         {
        'react/style-prop-object':           0,
        'react/jsx-props-no-spreading':      0,
        'react/forbid-prop-types':           0,
        'react/jsx-wrap-multilines':         0,
        'react/state-in-constructor':        0,
        'import/no-unresolved':              0,
        'import/prefer-default-export':      0,
        'import/no-named-default':           0,
        'import/no-dynamic-require':         0,
        'import/no-cycle':                   0,
        'import/no-webpack-loader-syntax':   0,
        'import/no-extraneous-dependencies': 0,
        'no-return-assign':                  0,
        'no-trailing-spaces':                0,
        'no-mixed-operators':                0,
        'no-mixed-spaces-and-tabs':          0,
        'no-tabs':                           0,
        'no-async-promise-executor':         0,
        'global-require':                    0,
        'camelcase':                         0,
        'linebreak-style':                   0,
        'jsx-quotes':                        [1, 'prefer-double'],
        'react/jsx-filename-extension':      [1, { 'extensions': ['.js', '.jsx'] }],
        'react-hooks/exhaustive-deps':       1,
        'react/jsx-indent':                  [1, 'tab'],
        'react/jsx-indent-props':            [1, 'tab'],
        'react-hooks/rules-of-hooks':        2,
        'max-len':                           [2, 120, 4],
        'arrow-parens':                      [2, 'as-needed'],
        'semi':                              [2, 'never'],
        'no-use-before-define':              [2, { 'functions': false }],
        'object-curly-newline':              [2, { 'consistent': true }],
        'operator-linebreak':                [2, 'after'],
        'no-multi-spaces':                   [2, { exceptions: { 'VariableDeclarator': true } }],
        'indent':                            [2, 'tab', { 'SwitchCase': 1 }],
        'sort-imports':                      [2, {
            'ignoreCase':            true,
            'ignoreDeclarationSort': true,
            'ignoreMemberSort':      false,
            'memberSyntaxSortOrder': ['all', 'single', 'multiple', 'none'],
        }],
        'key-spacing':                       [2, {
            align: {
                'beforeColon': false,
                'afterColon':  true,
                'on':          'value',
            },
        }],
        'react/sort-comp':                   [
            2,
            {
                'order':  [
                    'static-variables',
                    'static-methods',
                    'lifecycle',
                    '/^on.+$/',
                    'getters',
                    'setters',
                    '/^(get|set)(?!(InitialState$|DefaultProps$|ChildContext$)).+$/',
                    'instance-methods',
                    'everything-else',
                    'rendering',
                ],
                'groups': {
                    'lifecycle': [
                        'displayName',
                        'propTypes',
                        'contextTypes',
                        'childContextTypes',
                        'mixins',
                        'statics',
                        'defaultProps',
                        'constructor',
                        'getDefaultProps',
                        'getInitialState',
                        'state',
                        'classProps',
                        // 'instance-variables', // class properties
                        'getChildContext',
                        'componentWillMount',
                        'componentDidMount',
                        'componentWillReceiveProps',
                        'shouldComponentUpdate',
                        'componentWillUpdate',
                        'componentDidUpdate',
                        'componentWillUnmount',
                    ],
                    'rendering': [
                        '/^render.+$/',
                        'render',
                    ],
                },
            },
        ],
    },
    settings:      {
        'import/extensions': [
            '.js',
            '.jsx',
        ],
    },
}
